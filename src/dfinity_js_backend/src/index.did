service: () -> {
    createChat: (record {patient_id:text; message:text; timestamp:text; doctor_id:text}) -> (variant {Ok:record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createConsultation: (record {department_id:text; patient_id:text; problem:text}) -> (variant {Ok:record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createDepartment: (record {name:text}) -> (variant {Ok:record {id:text; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createDoctor: (record {department_id:text; name:text; image:text}) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createPatient: (record {age:nat64; name:text}) -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    getAllChats: () -> (variant {Ok:vec record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllConsultations: () -> (variant {Ok:vec record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllDepartments: () -> (variant {Ok:vec record {id:text; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllDoctors: () -> (variant {Ok:vec record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getAllPatients: () -> (variant {Ok:vec record {id:text; age:nat64; owner:principal; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getChatById: (text) -> (variant {Ok:record {id:text; patient_id:text; message:text; timestamp:text; doctor_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getConsultationById: (text) -> (variant {Ok:record {id:text; department_id:text; patient_id:text; problem:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDepartmentById: (text) -> (variant {Ok:record {id:text; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDoctorById: (text) -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getDoctorByOwner: () -> (variant {Ok:record {id:text; department_id:text; owner:principal; name:text; image:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPatientById: (text) -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPatientByOwner: () -> (variant {Ok:record {id:text; age:nat64; owner:principal; name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
}
